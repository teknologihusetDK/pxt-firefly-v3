<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="jsULq@Ju/gk1x!J]Yc!k" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="a.ZlzA$%soTacodpw]cm" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Firefly {" line1="    let i2cAddr = 8 " line2="    " line3="    function write(component: number, command: number, value: number): void {" line4="        /*let buffer = pins.createBuffer(3)" line5="        buffer.setNumber(NumberFormat.Int8LE, 0, component)" line6="        buffer.setNumber(NumberFormat.Int8LE, 1, command)" line7="        buffer.setNumber(NumberFormat.Int8LE, 2, value)" line8="        pins.i2cWriteBuffer(chipAddress, buffer, false)*/" line9="        pins.i2cWriteNumber(i2cAddr, component, NumberFormat.Int8LE, false)" line10="        basic.pause(20)" line11="        pins.i2cWriteNumber(i2cAddr, command, NumberFormat.Int8LE, false)" line12="        basic.pause(20)" line13="        pins.i2cWriteNumber(i2cAddr, value, NumberFormat.Int8LE, false)" line14="        basic.pause(20)" line15="" line16="    }" line17="" line18="    /**" line19="    * Blinks the LED once." line20="    */" line21="    //% block" line22="    export function blink() {" line23="        pins.P0.digitalWrite(true)" line24="        pause(500)" line25="        pins.P0.digitalWrite(false)" line26="        pause(500)" line27="    }" line28="    //% block" line29="    //% blockHidden=true" line30="    export enum ServoPinValues {" line31="        servo1 = 5," line32="        servo2 = 6," line33="        servo3 = 7," line34="        servo4 = 8" line35="    }" line36="" line37="    //% blockId=set_servo" line38="    /*//% block=&quot;Set %servoAtPin| to %angle&quot;*/" line39="    //% block=&quot;Sæt %servoAtPin| til position %angle&quot;" line40="    //% group=&quot;Servo Motor&quot;" line41="    //% angle.min=0 angle.max=180 angle.defl=0" line42="    //max=150 - see servo spec doc" line43="    export function setServo(servoAtPin: ServoPinValues, angle: number): void {" line44="        //write(97, 98, 0) //Enable Servo" line45="        write(servoAtPin, 5, angle)" line46="    }" line47="" line48="    //% block" line49="    //% blockHidden=true" line50="    export enum DCPinValues {" line51="        dcmotor1 = 1," line52="        dcmotor2 = 2," line53="        dcmotor3 = 3," line54="        dcmotor4 = 4" line55="    }" line56="" line57="    //% block" line58="    //% blockHidden=true" line59="    export enum DCDirectionValues {" line60="        forward = 1," line61="        backward = 2" line62="    }" line63="" line64="    //% blockId=set_dc" line65="    /*//% block=&quot;Set %dcAtPin| to %direction| at %speed&quot;*/" line66="    //% block=&quot;Kør %dcAtPin| %direction | med hastighed %speed&quot;" line67="    //% group=&quot;DC Motor&quot;" line68="    //% speed.min=0 speed.max=100 speed.defl=0" line69="    export function setDC(dcAtPin: DCPinValues, direction: DCDirectionValues, speed: number): void {" line70="        //write(97, 97, 0) //Enable DC" line71="        write(dcAtPin, direction, speed)" line72="" line73="    }" line74="}" numlines="75"></mutation></block></statement></block></xml>