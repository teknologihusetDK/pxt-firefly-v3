<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="@WEke69j*VLJ+7c`33!E" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="K!!~,r{`xp,D:MIsSz,/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Firefly {" line1="    let i2cAddr: 8 // 0x08" line2="    " line3="    function write(chipAddress: number, component: number, command: number, value: number): void {" line4="        /*let buffer = pins.createBuffer(3)" line5="        buffer.setNumber(NumberFormat.Int8LE, 0, component)" line6="        buffer.setNumber(NumberFormat.Int8LE, 1, command)" line7="        buffer.setNumber(NumberFormat.Int8LE, 2, value)" line8="        pins.i2cWriteBuffer(chipAddress, buffer, false)*/" line9="        pins.i2cWriteNumber(chipAddress, component, NumberFormat.Int8LE, false)" line10="        basic.pause(20)" line11="        pins.i2cWriteNumber(chipAddress, command, NumberFormat.Int8LE, false)" line12="        basic.pause(20)" line13="        pins.i2cWriteNumber(chipAddress, value, NumberFormat.Int8LE, false)" line14="        basic.pause(20)" line15="    }" line16="" line17="    /**" line18="    * Blinks the LED once." line19="    */" line20="    //% block" line21="    export function blink() {" line22="        pins.P0.digitalWrite(true)" line23="        pause(500)" line24="        pins.P0.digitalWrite(false)" line25="        pause(500)" line26="    }" line27="    //% block" line28="    //% blockHidden=true" line29="    export enum ServoPinValues {" line30="        servo1 = 5," line31="        servo2 = 6," line32="        servo3 = 7," line33="        servo4 = 8" line34="    }" line35="" line36="    //% blockId=set_servo" line37="    /*//% block=&quot;Set %servoAtPin| to %angle&quot;*/" line38="    //% block=&quot;Sæt %servoAtPin| til position %angle&quot;" line39="    //% group=&quot;Servo Motor&quot;" line40="    //% angle.min=0 angle.max=180 angle.defl=0" line41="    //max=150 - see servo spec doc" line42="    export function setServo(servoAtPin: ServoPinValues, angle: number): void {" line43="        //adjustMotorType(&quot;servo&quot;)" line44="        write(i2cAddr, servoAtPin, 5, angle)" line45="    }" line46="" line47="    //% block" line48="    //% blockHidden=true" line49="    export enum DCPinValues {" line50="        dcmotor1 = 1," line51="        dcmotor2 = 2," line52="        dcmotor3 = 3," line53="        dcmotor4 = 4" line54="    }" line55="" line56="    //% block" line57="    //% blockHidden=true" line58="    export enum DCDirectionValues {" line59="        forward = 1," line60="        backward = 2" line61="    }" line62="" line63="    //% blockId=set_dc" line64="    /*//% block=&quot;Set %dcAtPin| to %direction| at %speed&quot;*/" line65="    //% block=&quot;Kør %dcAtPin| %direction | med hastighed %speed&quot;" line66="    //% group=&quot;DC Motor&quot;" line67="    //% speed.min=0 speed.max=100 speed.defl=0" line68="    export function setDC(dcAtPin: DCPinValues, direction: DCDirectionValues, speed: number): void {" line69="        //adjustMotorType(&quot;dc&quot;)" line70="        write(i2cAddr, dcAtPin, direction, speed )" line71="    }" line72="}" numlines="73"></mutation></block></statement></block></xml>